@model RMS.App.ViewModels.RequisitionViewModel

@{
    ViewBag.Title = "Create";
}
<br/>
<div class="row">
    <div class="col-md-12">
        <div class="col-md-6">
            Use this form to set up and/or modify requisitions. In addition to being added manually in this form, 
            requisitions can also be added via initialization (PO Requisition Initialization) or PM Material Detail. However, requisitions created via PO Requisition Initialization and PM Material Detail are limited to specific line types. PO Requisition Initialization generates either Inventory or Work Order requisition lines based on low stock or parts needed for work orders, respectively. PM Material Detail will generate only Job requisition lines based on materials set up for a project. 
            For information about requisitions created using these forms, see Related Topics below.
        </div>
        <div class="col-md-6">
            <a href="#" class="btn btn-primary" data-toggle="modal" data-target="#forRequest">Request For Other</a>

            <a href="#" class="btn btn-primary" data-toggle="modal" data-target="#ownRequest">Request For Me</a>
        </div>
    </div>
</div>

<div class="modal fade" id="forRequest">
    <div class="modal-dialog">
        <div class="modal-content">

            <div class="modal-header">
                <h3 class="modal-title">Request For Other</h3>
                <a href="#" class="close" data-dismiss="modal">&times;</a>
            </div>
            <div class="modal-body">

                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.FromPlace, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.FromPlace, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FromPlace, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.DestinationPlace, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.DestinationPlace, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DestinationPlace, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.StartDateTime, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.StartDateTime, new { htmlAttributes = new { @class = "form-control datepicker" } })
                                @Html.ValidationMessageFor(model => model.StartDateTime, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.EndDateTime, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.EndDateTime, new { htmlAttributes = new { @class = "form-control datepicker" } })
                                @Html.ValidationMessageFor(model => model.EndDateTime, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.RequestFor, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.RequestFor, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.RequestFor, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.EmployeeId, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("EmployeeId", null,"Select", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.EmployeeId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Create" class="btn btn-default" />
                            </div>
                        </div>
                    </div>
                }
            </div>
            <div class="modal-footer"></div>
            <a href="#" class="btn btn-warning" data-dismiss="modal">Cancel</a>
            <a href="#" class="btn btn-success">Submit</a>
        </div>
    </div>
</div>

<!-----------start Request for me-->
<div class="modal fade" id="ownRequest">
    <div class="modal-dialog">
        <div class="modal-content">

            <div class="modal-header">
                <h3 class="modal-title">Request For Own</h3>
                <a href="#" class="close" data-dismiss="modal">&times;</a>
            </div>
            <div class="modal-body">

                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.FromPlace, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.FromPlace, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FromPlace, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.DestinationPlace, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.DestinationPlace, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DestinationPlace, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.StartDateTime, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.StartDateTime, new { htmlAttributes = new { @class = "form-control datepicker" } })
                                @Html.ValidationMessageFor(model => model.StartDateTime, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.EndDateTime, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.EndDateTime, new { htmlAttributes = new { @class = "form-control datepicker" } })
                                @Html.ValidationMessageFor(model => model.EndDateTime, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.RequestFor, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.RequestFor, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.RequestFor, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.EmployeeId, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("EmployeeId", null,"Select", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.EmployeeId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Create" class="btn btn-default" />
                            </div>
                        </div>
                    </div>
                }
            </div>
            <div class="modal-footer"></div>
            <a href="#" class="btn btn-warning" data-dismiss="modal">Cancel</a>
            <a href="#" class="btn btn-success">Submit</a>
        </div>
    </div>
</div>

<!-----------end Request for me-->

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script src="~/Scripts/bootstrap.min.js"></script>
    <script src="~/Content/jquery-ui-1.12.1.custom/jquery-ui.min.js"></script>
    <script>
        $(document).ready(function() {
            $(".datepicker").datepicker({
                //changeMonth: true,
                //changeYear: true,
                yearRange: "-0:+10",
                buttonText:"<i class='fa fa-calendar'></i>"
            });
            
        })
    </script>
}
