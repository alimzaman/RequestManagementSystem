@model RMS.App.ViewModels.AssignRequisitionViewModel

@{
    ViewBag.Title = "Create Assign Requisition";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create Assign Requisition</h2>
<hr/>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group row">
            @Html.LabelFor(model => model.RequisitionId, htmlAttributes: new {@class = "control-label col-md-3"})
            <div class="col-md-9">
                @Html.TextBox("RequisitionId", null, new {htmlAttributes = new {@class = "text-box single-line readonly"}})
                @Html.ValidationMessageFor(model => model.RequisitionId, "Requisition Id Not Changed", new {@class = "text-danger"})
            </div>
            <div class="form-group row">
                @Html.Label("Status Id", htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.DropDownList("RequisitionStatusId", null, new { htmlAttributes = new { @class = "text-box single-line readonly" } })
                    @Html.ValidationMessage("Status Id", "Requisition Id Not Changed", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group row">
            @Html.LabelFor(model => model.RequisitionNumber, "RequisitionNumber", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.TextBox("RequisitionNumber",null, new { htmlAttributes = new {@readonly=true}} )
                @Html.ValidationMessageFor(model => model.RequisitionNumber, "Requisition Number Not Changed", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.VehicleId, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.DropDownList("VehicleId",null, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VehicleId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.EmployeeId, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.DropDownList("EmployeeId",null, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmployeeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            <div class="col-md-3"></div>
            <div class="col-md-9">
                <input type="submit" value="Create" class="btn btn-default"/> &nbsp;
                @Html.ActionLink("Back to List", "Index",null,new {@class="btn btn-info"})
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
