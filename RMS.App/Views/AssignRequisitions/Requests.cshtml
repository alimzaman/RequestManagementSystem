@model IEnumerable<RMS.App.ViewModels.RequisitionStatusViewModel>

@{
    ViewBag.Title = "New Requests List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <h2>New Requests List</h2>
    <hr />

    <div class="container">
        <div class="row align-items-center">
            <div class="col-lg-3 col-sm-3 col-3 text-left no-padding">
                <p>

                </p>
            </div>

            <div class="col-lg-9 col-sm-9 col-9 text-right no-padding">
                <p>
                    @using (Html.BeginForm("Requests", "AssignRequisitions", FormMethod.Get))
                    {
                        <b>Search by ( Requisition Number ) </b>
                        @Html.TextBox("searchText")
                        <input type="submit" value="Search" />
                    }
                </p>
            </div>
        </div>
    </div>

    <table class="table table-bordered table-active table-striped">
        <tr>
            <th>
                SL
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StatusType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.RequisitionNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.RequisitionId)
            </th>
            <th>
                Action
            </th>
        </tr>
        @{
            var sl = 0;
            if (Model.Count() != 0)
            {
                foreach (var item in Model)
                {
                    sl++;
                    <tr>
                        <td>
                            @sl
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.StatusType)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.RequisitionNumber)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.RequisitionId)
                        </td>
                        <td>
                            @Html.ActionLink("Assign Requisition", "Create", new { requisitionId = item.RequisitionId }) |
                            @Html.ActionLink("View", "ViewDetails", new {id = item.RequisitionId}) |
                            @Html.ActionLink("Cancel Requisition", "Cancel", new {id = item.RequisitionId})

                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td class="text-center text-danger" colspan="5"> Data Not Found!</td>
                </tr>
            }
        }
    </table>
</div>


